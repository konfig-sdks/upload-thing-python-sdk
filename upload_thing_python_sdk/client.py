# coding: utf-8
"""
    UploadThing REST API

    UploadThing is the easiest way to add file uploads to your full stack TypeScript application. Many services have tried to build a \"better S3\", but in our opinion, none found the right compromise of ownership, flexibility and safety.

    The version of the OpenAPI document: 6.4.0
    Generated by: https://konfigthis.com
"""

import typing
import inspect
from datetime import date, datetime
from upload_thing_python_sdk.client_custom import ClientCustom
from upload_thing_python_sdk.configuration import Configuration
from upload_thing_python_sdk.api_client import ApiClient
from upload_thing_python_sdk.type_util import copy_signature
from upload_thing_python_sdk.apis.tags.callback_api import CallbackApi
from upload_thing_python_sdk.apis.tags.file_api import FileApi
from upload_thing_python_sdk.apis.tags.multipart_api import MultipartApi
from upload_thing_python_sdk.apis.tags.server_callback_api import ServerCallbackApi
from upload_thing_python_sdk.apis.tags.upload_api import UploadApi
from upload_thing_python_sdk.apis.tags.usage_info_api import UsageInfoApi



class UploadThing(ClientCustom):

    def __init__(self, configuration: typing.Union[Configuration, None] = None, **kwargs):
        super().__init__(configuration, **kwargs)
        if (len(kwargs) > 0):
            configuration = Configuration(**kwargs)
        if (configuration is None):
            raise Exception("configuration is required")
        api_client = ApiClient(configuration)
        self.callback: CallbackApi = CallbackApi(api_client)
        self.file: FileApi = FileApi(api_client)
        self.multipart: MultipartApi = MultipartApi(api_client)
        self.server_callback: ServerCallbackApi = ServerCallbackApi(api_client)
        self.upload: UploadApi = UploadApi(api_client)
        self.usage_info: UsageInfoApi = UsageInfoApi(api_client)
