# coding: utf-8

"""
    UploadThing REST API

    UploadThing is the easiest way to add file uploads to your full stack TypeScript application. Many services have tried to build a \"better S3\", but in our opinion, none found the right compromise of ownership, flexibility and safety.

    The version of the OpenAPI document: 6.4.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from upload_thing_python_sdk import schemas  # noqa: F401


class FileMarkForDeletionRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def files() -> typing.Type['FileMarkForDeletionRequestFiles']:
                return FileMarkForDeletionRequestFiles
        
            @staticmethod
            def fileKeys() -> typing.Type['FileMarkForDeletionRequestFileKeys']:
                return FileMarkForDeletionRequestFileKeys
        
            @staticmethod
            def customIds() -> typing.Type['FileMarkForDeletionRequestCustomIds']:
                return FileMarkForDeletionRequestCustomIds
            __annotations__ = {
                "files": files,
                "fileKeys": fileKeys,
                "customIds": customIds,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["files"]) -> 'FileMarkForDeletionRequestFiles': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fileKeys"]) -> 'FileMarkForDeletionRequestFileKeys': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customIds"]) -> 'FileMarkForDeletionRequestCustomIds': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["files", "fileKeys", "customIds", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["files"]) -> typing.Union['FileMarkForDeletionRequestFiles', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fileKeys"]) -> typing.Union['FileMarkForDeletionRequestFileKeys', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customIds"]) -> typing.Union['FileMarkForDeletionRequestCustomIds', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["files", "fileKeys", "customIds", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        files: typing.Union['FileMarkForDeletionRequestFiles', schemas.Unset] = schemas.unset,
        fileKeys: typing.Union['FileMarkForDeletionRequestFileKeys', schemas.Unset] = schemas.unset,
        customIds: typing.Union['FileMarkForDeletionRequestCustomIds', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FileMarkForDeletionRequest':
        return super().__new__(
            cls,
            *args,
            files=files,
            fileKeys=fileKeys,
            customIds=customIds,
            _configuration=_configuration,
            **kwargs,
        )

from upload_thing_python_sdk.model.file_mark_for_deletion_request_custom_ids import FileMarkForDeletionRequestCustomIds
from upload_thing_python_sdk.model.file_mark_for_deletion_request_file_keys import FileMarkForDeletionRequestFileKeys
from upload_thing_python_sdk.model.file_mark_for_deletion_request_files import FileMarkForDeletionRequestFiles
